[platformio]
default_envs = tasks_tests
; default_envs = esp32dev.debug
; default_envs = esp32dev.release
# default_envs = WioTerminal.debug
; default_envs = Button2.example
; default_envs = throttle_mapper
; default_envs = mag_encoder
#------------------------------------------------

[env]
framework = arduino

; upload_port = COM7
; monitor_port = COM7
; upload_port = COM9
; monitor_port = COM9
upload_port = COM10
monitor_port = COM10
; upload_port = COM25
; monitor_port = COM25
test_port = COM10
monitor_speed = 115200

; test_filter = test_smoother

build_flags =
  -D VERSION=3.1
  -D VERSION_BOARD_COMPAT=3.1
  !python ./getCurrentGitBranch.py ; GIT_BRANCH_NAME
  -D PRINT_THIS=1


lib_deps = 
  https://github.com/LennartHennigs/Button2.git
  https://github.com/pfeerick/elapsedMillis.git

  https://github.com/greiman/DigitalIO.git
  https://github.com/nRF24/RF24.git
  https://github.com/nRF24/RF24Network.git
  https://github.com/RobTillaart/FastMap.git
  https://github.com/FastLED/FastLED.git

  https://github.com/skelstar/arduino-fsm.git#v2.3
  https://github.com/skelstar/NRF24L01.Library.git#introducing-mutex-to-update-etc
  https://github.com/skelstar/Esk8-Shared.git#rtos-queue-subscribe ; v1.1
  https://github.com/skelstar/TFT_eSPI.git#Esk8.Board.Server

  https://github.com/skelstar/Seeed_Arduino_AS5600.git
  https://github.com/sparkfun/SparkFun_Qwiic_Button_Arduino_Library.git


#------------------------------------------------

[env:BOARD_RED_REMOTE]
build_flags =
  ; -D OPTION_USING_DISPLAY=1
  -D THROTTLE_PIN=27
  -D PRIMARY_BUTTON_PIN=21
  -D THROTTLE_RAW_MAX=2530
  -D THROTTLE_RAW_CENTRE=1280
  -D THROTTLE_RAW_MIN=0
  -D THROTTLE_RAW_DEADBAND=50
  -D BATTERY_MEASURE_PIN=34


[env:BOARD_NINTENDO_REMOTE]
build_flags =
  ; -D OPTION_USING_DISPLAY=1
  -D OPTION_USING_MAG_THROTTLE=1
  -D SWEEP_ANGLE=30.0
  -D LIMIT_DELTA_MAX=50.0
  -D LIMIT_DELTA_MIN=0.5
  -D DIR_CLOCKWISE=0
  -D DIR_ANIT_CLOCKWISE=1
  -D THROTTLE_DIRECTION=DIR_CLOCKWISE
  -D BATTERY_MEASURE_PIN=34

[env:ESP32_Common]
platform = espressif32
board = nodemcu-32s

monitor_filters = time, esp32_exception_decoder

build_flags =
  ${env:BOARD_NINTENDO_REMOTE.build_flags}
  -D IS_ESP32
  -D LONGCLICK_MS=1000
  -D DISP_SOFTWARE_STATS_TIME=1500
  -D DISP_BOARD_BATTERY_TIME=800

[env:ESP32_SPI]
build_flags = 
  -D SOFT_SPI_MOSI_PIN=13 # Blue
  -D SOFT_SPI_MISO_PIN=12 # Orange
  -D SOFT_SPI_SCK_PIN=15  # Yellow
  -D NRF_CE=17
  -D NRF_CS=2
  -D SOFTSPI

[env:NINTENDO_SPI]
build_flags = 
  -D SOFT_SPI_MOSI_PIN=13 # Blue
  -D SOFT_SPI_MISO_PIN=25 # Orange
  -D SOFT_SPI_SCK_PIN=15  # Yellow
  -D NRF_CE=17
  -D NRF_CS=2
  -D SOFTSPI

[env:ESP32_CORES]
build_flags =
  -D DISPLAY_TASK_CORE=0  ; normally 0
  -D COMMS_TASK_CORE=0
  -D REMOTE_TASK_CORE=0
  -D STATS_TASK_CORE=0
  -D LED_TASK_CORE=0
  -D PERIPHERALS_TASK_CORE=0
  -D DEBUG_TASK_CORE=0
  -D SPARKFUN_BUTTON_TASK_CORE=0

[env:USING_FEATURES]
build_flags = 
  -D USING_DISPLAY=1
  -D USING_REMOTE=1
  ; -D USING_STATS=1
  -D USING_NINTENDO_BUTTONS=1
  ; -D USING_LED=1
  ; -D USING_DEBUG_TASK=1
  -D USING_QWIIC_BUTTON_TASK=1

;-------------------------------------------------------

[env:esp32dev.debug]
src_filter = ${dir.main}

platform=${env:ESP32_Common.platform}
board=${env:ESP32_Common.board}
monitor_filters=${env:ESP32_Common.monitor_filters}

lib_deps =
  ${env.lib_deps}

build_flags = 
  ${env.build_flags}
  ${env:NINTENDO_SPI.build_flags}
  ${env:ESP32_CORES.build_flags}
  ${env:ESP32_Common.build_flags}
  ${env:USING_FEATURES.build_flags}

  -D DEBUG_BUILD=1
  -D DEBUG_SERIAL
  
  -D PRINT_COMMS_STATE=1
  -D PRINT_COMMS_STATE_EVENT=1

  -D PRINT_NRF24L01_DETAILS=1
  ; -D PRINT_THROTTLE=1
  -D PRINT_BUTTON_EVENTS=1
  -D PRINT_RESET_DETECTION=1

  -D PRINT_DISP_STATE=1
  -D PRINT_DISP_STATE_EVENT=1
  
  ; -D PRINT_IF_TOTAL_FAILED_SENDING=1
  ; -D PRINT_TX_TO_BOARD=1
  ; -D PRINT_RX_FROM_BOARD=1

  ; -D PRINT_BOARD_CLIENT_CONNECTED_CHANGED=1

  ; -D PRINT_MUTEX_TAKE_FAIL=1
  -D PRINT_MUTEX_SUCCESS=1

  ; -D PRINT_NINTENDO_BUTTON=1

  -D FEATURE_LED_COUNT=4 ; number of LEDs (0 when commented out)

  -D FEATURE_CRUISE_CONTROL=true
  -D FEATURE_PUSH_TO_START=true
  -D FEATURE_START_MOVING_BOOST=true
  -D SEND_TO_BOARD_INTERVAL=200
  -D NUM_MISSED_PACKETS_MEANS_DISCONNECTED=3
  ; how often we store moving time data in memory
  -D STORE_SNAPSHOT_INTERVAL=5000
  -D SUPPRESS_EV_COMMS_PKT_RXD=1

  ; -D COMMS_M5ATOM=03

;-------------------------------------------------------
[env:esp32dev.release]
src_filter = ${dir.main}

platform=${env:ESP32_Common.platform}
board=${env:ESP32_Common.board}
monitor_filters=${env:ESP32_Common.monitor_filters}

build_flags = 

  ${env.build_flags}
  ${env:NINTENDO_SPI.build_flags}
  ${env:ESP32_CORES.build_flags}
  ${env:ESP32_Common.build_flags}

  -D RELEASE_BUILD=1
  -D DEBUG_SERIAL
  -D FEATURE_CRUISE_CONTROL=true
  -D FEATURE_PUSH_TO_START=true
  -D SEND_TO_BOARD_INTERVAL=200
  -D NUM_MISSED_PACKETS_MEANS_DISCONNECTED=3
  ; how often we store moving time data in memory
  -D STORE_SNAPSHOT_INTERVAL=5000

;-------------------------------------------------------

[env:WioTerminal_SPI]
build_flags=
  -D SOFT_SPI_MOSI_PIN=13 # Blue
  -D SOFT_SPI_MISO_PIN=12 # Orange
  -D SOFT_SPI_SCK_PIN=15  # Yellow
  -D NRF_CE=17
  -D NRF_CS=2
  -D SPI_MODE=0
  -D SOFTSPI

[env:WioTerminal_CORES]
build_flags=
  -D DISPLAY_TASK_CORE=1
  -D COMMS_TASK_CORE=1
  -D BATTERY_TASK_CORE=1
#------------------------------------------------

[env:WioTerminal.debug]
src_filter = ${dir.main}

lib_deps =
  https://github.com/Seeed-Studio/Seeed_Arduino_LCD.git

build_flags = 
  ${env.build_flags}
  ${env:WioTerminal_SPI.build_flags}
  ${env:WioTerminal_CORES.build_flags}

  -D DEBUG_BUILD=1
  -D DEBUG_SERIAL
  -D PRINT_COMMS_STATE=1
  ; -D PRINT_COMMS_STATE_EVENT=1
  ; -D PRINT_THROTTLE=1
  ; -D PRINT_BUTTON_EVENTS=1
  -D PRINT_RESET_DETECTION=1
  -D PRINT_DISP_STATE=1
  -D PRINT_DISP_STATE_EVENT=1
  ; -D PRINT_IF_TOTAL_FAILED_SENDING=1
  ; -D PRINT_TX_TO_BOARD=1
  ; -D PRINT_RX_FROM_BOARD=1
  
  -D FEATURE_CRUISE_CONTROL=true
  -D FEATURE_PUSH_TO_START=true
  -D SEND_TO_BOARD_INTERVAL=500
  -D LONGCLICK_MS=1000
  -D NUM_MISSED_PACKETS_MEANS_DISCONNECTED=3
  ; how often we store moving time data in memory
  -D STORE_SNAPSHOT_INTERVAL=5000
  -D SUPPRESS_EV_COMMS_PKT_RXD=1
#------------------------------------------------

[env:Button2.example]
src_filter = ${dir.button2}
platform=${env:ESP32_Common.platform}
board=${env:ESP32_Common.board}

build_flags = 
  -D DEBUG_SERIAL
#------------------------------------------------

[env:throttle_mapper]
src_filter = ${dir.throttle_mapper}
platform=${env:ESP32_Common.platform}
board=${env:ESP32_Common.board}

build_flags = 
  ${env:BOARD_NINTENDO_REMOTE.build_flags}
  -D DEBUG_SERIAL
  -D PRINT_THROTTLE=0
#------------------------------------------------

[env:mag_encoder]
src_filter = ${dir.mag_encoder}
platform=${env:ESP32_Common.platform}
board=${env:ESP32_Common.board}
; monitor_filters=${env:ESP32_Common.monitor_filters}

test_filter = mag_encoder

lib_deps = 
  https://github.com/Seeed-Studio/Seeed_Arduino_AS5600.git
  https://github.com/sparkfun/SparkFun_Qwiic_Button_Arduino_Library.git

build_flags = 
  ${env:BOARD_NINTENDO_REMOTE.build_flags}
  -D DEBUG_SERIAL
  -D PRINT_THROTTLE=1
  -D SWEEP_ANGLE=30.0
  -D LIMIT_DELTA_MAX=50.0
  -D LIMIT_DELTA_MIN=50.0

;-------------------------------------------------------
[env:tasks_tests]
platform=${env:ESP32_Common.platform}
board=${env:ESP32_Common.board}
monitor_filters=${env:ESP32_Common.monitor_filters}

; src_filter = ${dir.test_BoardCommsTask}
; test_filter = test_BoardCommsTask
; src_filter = ${dir.test_DisplayTask}
; test_filter = test_DisplayTask
; src_filter = ${dir.test_NintendoController}
; test_filter = test_NintendoController
; src_filter = ${dir.test_ThrottleState}
; test_filter = test_ThrottleState
src_filter = ${dir.test_QueueManager}
test_filter = test_QueueManager
; src_filter = ${dir.test_QwiicButtonWithMock}
; test_filter = test_QwiicButtonWithMock
; src_filter = ${dir.test_QwiicButtonWithButton}
; test_filter = test_QwiicButtonWithButton
; src_filter = ${dir.tasks}
; test_filter = tasks
; src_filter = ${dir.test_TaskBase}
; test_filter = test_TaskBase

lib_deps =
  ${env.lib_deps}
  ; ArduinoFake@0.2.2

build_flags =
  ${env.build_flags}
  ${env:NINTENDO_SPI.build_flags}
  ${env:ESP32_CORES.build_flags}
  ${env:ESP32_Common.build_flags}
  ${env:USING_FEATURES.build_flags}
  -D SEND_TO_BOARD_INTERVAL=200
  -D NUM_MISSED_PACKETS_MEANS_DISCONNECTED=1
  ; -D PRINT_MUTEX_TAKE_SUCCESS=1
  ; -D PRINT_MUTEX_GIVE_SUCCESS=1
  -D PRINT_DISP_STATE=1
  -D PRINT_DISP_STATE_EVENT=1


#------------------------------------------------

[dir]
main = +<main/>
button2 = +<button2/>
throttle_mapper = +<throttle_mapper/>
mag_encoder = +<mag_encoder/>
tasks = +<tasks/>
test_BoardCommsTask = +<test_BoardCommsTask/>
test_DisplayTask = +<test_DisplayTask/>
test_NintendoController = +<test_NintendoController/>
test_QueueManager = +<test_QueueManager/>
test_QwiicButtonWithMock = +<test_QwiicButtonWithMock/>
test_QwiicButtonWithButton = +<test_QwiicButtonWithButton/>
test_TaskBase = +<test_TaskBase/>
test_ThrottleState = +<test_ThrottleState/>
